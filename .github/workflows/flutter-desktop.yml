# GitHub Actions CI/CD for Flutter (Windows, macOS, Linux)

name: Flutter CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze
        run: flutter analyze

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: flutter build linux --release

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: flutter build macos --release

      - name: Strip macOS binary (reduce size)
        if: matrix.os == 'macos-latest'
        run: |
          APP_NAME="YourApp" # change this to your actual app name
          BINARY="build/macos/Build/Products/Release/$APP_NAME.app/Contents/MacOS/$APP_NAME"
          if [ -f "$BINARY" ]; then
            strip -x "$BINARY"
          else
            echo "Binary not found: $BINARY"
          fi

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: flutter build windows --release

      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: build/linux/x64/release/

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: build/macos/Build/Products/Release/

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: build/windows/runner/Release
