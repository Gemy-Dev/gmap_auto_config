name: Main CI

on:
  push:
    branches: [ main ]
    tags:
      Regarding Flutter version, I'll assume you're requesting this update to use Flutter 3.29.1, released around March 2025 based on their quarterly release schedule (estimated). Let me know if you meant something different by "flutter 3.29.1"!

  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact-path: build/linux/x64/release
            build-command: flutter build linux --release
          - os: windows-latest
            artifact-path: build/windows/x64/runner/Release
            build-command: flutter build windows --release
          - os: macos-latest
            artifact-path: build/macos/Build/Products/Release
            build-command: flutter build macos --release

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17' # LTS as of 2025; check https://adoptium.net/temurin/releases/ for updates
          distribution: 'temurin'

      # Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1' # Updated to requested version
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}

      # Verify Flutter installation
      - name: Verify Flutter
        run: flutter doctor --verbose

      # Cache pub dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ github.workspace }}/.dart_tool
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-pub-

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Run code analysis
      - name: Run static analysis
        run: dart analyze --fatal-infos

      # Run tests
      - name: Run tests
        run: flutter test
        continue-on-error: true

      # Build for specific platform
      - name: Build
        run: ${{ matrix.build-command }}
        env:
          FLUTTER_ROOT: ${{ env.FLUTTER_ROOT }}

      # Optimize macOS binary
      - name: Optimize macOS binary
        if: matrix.os == 'macos-latest'
        run: |
          find build/macos/Build/Products/Release/*.app/Contents/MacOS -type f -exec strip -x {} \;
        continue-on-error: true

      # Create artifact directory
      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp -r ${{ matrix.artifact-path }} artifacts/
        continue-on-error: true

      # Upload build artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-release
          path: artifacts/
          retention-days: 5
        if: always()

      # Create GitHub Release
      - name: Create GitHub Release
        if: github.ref_type == 'tag' && github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            üéâ New release ${{ github.ref_name }}
            
            ## Builds
            - Linux: ${{ matrix.os == 'ubuntu-latest' && '‚úÖ' || '‚ùå' }}
            - Windows: ${{ matrix.os == 'windows-latest' && '‚úÖ' || '‚ùå' }}
            - macOS: ${{ matrix.os == 'macos-latest' && '‚úÖ' || '‚ùå' }}
            
            ## Changelog
            - Add your changelog here
          files: |
            ${{ matrix.artifact-path }}/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
